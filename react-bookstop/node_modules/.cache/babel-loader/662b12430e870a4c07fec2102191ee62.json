{"ast":null,"code":"var _jsxFileName = \"/Users/adina.weinberg/Desktop/seir-angelica/projects/project-3/frontend/react-bookstop/src/components/CreateReadForm/index.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useContext } from 'react';\nimport { UserContext } from '../../App';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CreateReadForm = () => {\n  _s();\n\n  const userContext = useContext(UserContext);\n  const initialFormValues = {\n    title: '',\n    author: '',\n    review: ''\n  };\n  const [values, setValues] = useState(initialFormValues); // handle change function\n\n  const _handleChange = e => {\n    setValues(prevState => {\n      return { ...prevState,\n        [e.target.id]: e.target.value\n      };\n    });\n  }; // create new wish list item function\n\n\n  const _createNewReadBook = async e => {\n    e.preventDefault();\n\n    try {\n      const API_ENDPOINT = 'http://localhost:4000/read-books';\n      const response = await fetch(API_ENDPOINT, {\n        method: 'POST',\n        body: JSON.stringify({\n          title: values.title,\n          author: values.author,\n          review: values.review,\n          userId: userContext.user._id\n        }),\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      if (response.status === 201) userContext.getUser();\n      setValues(initialFormValues);\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"read-list\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"heading-list\",\n      children: \"My Bookshelf\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"heading-p\",\n      children: \"Add the books you've already read to your bookshelf\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container py-5\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"listforms col-lg-6 col-xm-12\",\n          children: /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: _createNewReadBook,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"txt_field\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"heading-p\",\n                htmlFor: \"title\",\n                children: \"Title\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 60,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                id: \"title\",\n                value: values.title,\n                onChange: _handleChange,\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 61,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"txt_field\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"heading-p\",\n                htmlFor: \"author\",\n                children: \"Author\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 70,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                id: \"author\",\n                value: values.author,\n                onChange: _handleChange,\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 71,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"txt_field\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"heading-p\",\n                htmlFor: \"review\",\n                children: \"Review\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 80,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                id: \"review\",\n                value: values.review,\n                onChange: _handleChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 81,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"btn-read btn btn-danger btn-lg \",\n              type: \"submit\",\n              value: \"Add Book\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 9\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"read-list-data col-lg-6 col-xm-12\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Title & Author\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"All the reviews should go here\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 9\n  }, this);\n};\n\n_s(CreateReadForm, \"awUAQeh2dx4T7Zoi0O1uWm3QYDI=\");\n\n_c = CreateReadForm;\nexport default CreateReadForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateReadForm\");","map":{"version":3,"sources":["/Users/adina.weinberg/Desktop/seir-angelica/projects/project-3/frontend/react-bookstop/src/components/CreateReadForm/index.js"],"names":["useState","useContext","UserContext","CreateReadForm","userContext","initialFormValues","title","author","review","values","setValues","_handleChange","e","prevState","target","id","value","_createNewReadBook","preventDefault","API_ENDPOINT","response","fetch","method","body","JSON","stringify","userId","user","_id","headers","status","getUser","err","console","log"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,UAAnB,QAAqC,OAArC;AACA,SAASC,WAAT,QAA4B,WAA5B;;;AAEA,MAAMC,cAAc,GAAG,MAAM;AAAA;;AACzB,QAAMC,WAAW,GAAGH,UAAU,CAACC,WAAD,CAA9B;AAEA,QAAMG,iBAAiB,GAAG;AACtBC,IAAAA,KAAK,EAAE,EADe;AAEtBC,IAAAA,MAAM,EAAE,EAFc;AAGtBC,IAAAA,MAAM,EAAE;AAHc,GAA1B;AAMA,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBV,QAAQ,CAACK,iBAAD,CAApC,CATyB,CAWzB;;AACA,QAAMM,aAAa,GAAIC,CAAD,IAAO;AACzBF,IAAAA,SAAS,CAAEG,SAAD,IAAe;AACrB,aAAO,EACH,GAAGA,SADA;AAEH,SAACD,CAAC,CAACE,MAAF,CAASC,EAAV,GAAeH,CAAC,CAACE,MAAF,CAASE;AAFrB,OAAP;AAIH,KALQ,CAAT;AAMH,GAPD,CAZyB,CAqBzB;;;AACA,QAAMC,kBAAkB,GAAG,MAAOL,CAAP,IAAa;AACpCA,IAAAA,CAAC,CAACM,cAAF;;AACA,QAAI;AACA,YAAMC,YAAY,GAAG,kCAArB;AACA,YAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACF,YAAD,EAAe;AACvCG,QAAAA,MAAM,EAAE,MAD+B;AAEvCC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACjBnB,UAAAA,KAAK,EAAEG,MAAM,CAACH,KADG;AAEjBC,UAAAA,MAAM,EAAEE,MAAM,CAACF,MAFE;AAGjBC,UAAAA,MAAM,EAAEC,MAAM,CAACD,MAHE;AAIjBkB,UAAAA,MAAM,EAAEtB,WAAW,CAACuB,IAAZ,CAAiBC;AAJR,SAAf,CAFiC;AAQvCC,QAAAA,OAAO,EAAE;AACL,0BAAgB;AADX;AAR8B,OAAf,CAA5B;AAYA,UAAIT,QAAQ,CAACU,MAAT,KAAoB,GAAxB,EACI1B,WAAW,CAAC2B,OAAZ;AACArB,MAAAA,SAAS,CAACL,iBAAD,CAAT;AACP,KAjBD,CAiBE,OAAO2B,GAAP,EAAY;AACVC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACH;AACJ,GAtBD;;AAwBA,sBACI;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,4BACI;AAAI,MAAA,SAAS,EAAC,cAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAG,MAAA,SAAS,EAAC,WAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGA;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA,6BACI;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA,gCACA;AAAK,UAAA,SAAS,EAAC,8BAAf;AAAA,iCACJ;AAAM,YAAA,QAAQ,EAAEf,kBAAhB;AAAA,oCAEI;AAAK,cAAA,SAAS,EAAC,WAAf;AAAA,sCACI;AAAO,gBAAA,SAAS,EAAC,WAAjB;AAA6B,gBAAA,OAAO,EAAC,OAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,eAEQ;AACI,gBAAA,IAAI,EAAC,MADT;AAEI,gBAAA,EAAE,EAAC,OAFP;AAGI,gBAAA,KAAK,EAAER,MAAM,CAACH,KAHlB;AAII,gBAAA,QAAQ,EAAEK,aAJd;AAKI,gBAAA,QAAQ;AALZ;AAAA;AAAA;AAAA;AAAA,sBAFR;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFJ,eAYI;AAAK,cAAA,SAAS,EAAC,WAAf;AAAA,sCACI;AAAO,gBAAA,SAAS,EAAC,WAAjB;AAA6B,gBAAA,OAAO,EAAC,QAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,eAEQ;AACI,gBAAA,IAAI,EAAC,MADT;AAEI,gBAAA,EAAE,EAAC,QAFP;AAGI,gBAAA,KAAK,EAAEF,MAAM,CAACF,MAHlB;AAII,gBAAA,QAAQ,EAAEI,aAJd;AAKI,gBAAA,QAAQ;AALZ;AAAA;AAAA;AAAA;AAAA,sBAFR;AAAA;AAAA;AAAA;AAAA;AAAA,oBAZJ,eAsBI;AAAK,cAAA,SAAS,EAAC,WAAf;AAAA,sCACI;AAAO,gBAAA,SAAS,EAAC,WAAjB;AAA6B,gBAAA,OAAO,EAAC,QAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,eAEQ;AACI,gBAAA,IAAI,EAAC,MADT;AAEI,gBAAA,EAAE,EAAC,QAFP;AAGI,gBAAA,KAAK,EAAEF,MAAM,CAACD,MAHlB;AAII,gBAAA,QAAQ,EAAEG;AAJd;AAAA;AAAA;AAAA;AAAA,sBAFR;AAAA;AAAA;AAAA;AAAA;AAAA,oBAtBJ,eA+BI;AAAO,cAAA,SAAS,EAAC,iCAAjB;AAAmD,cAAA,IAAI,EAAC,QAAxD;AAAiE,cAAA,KAAK,EAAC;AAAvE;AAAA;AAAA;AAAA;AAAA,oBA/BJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADI;AAAA;AAAA;AAAA;AAAA,gBADA,eAoCJ;AAAK,UAAA,SAAS,EAAC,mCAAf;AAAA,kCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBApCI;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAHA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAiDH,CA/FD;;GAAMR,c;;KAAAA,c;AAiGN,eAAeA,cAAf","sourcesContent":["import { useState, useContext } from 'react';\nimport { UserContext } from '../../App';\n\nconst CreateReadForm = () => {\n    const userContext = useContext(UserContext);\n\n    const initialFormValues = {\n        title: '',\n        author: '',\n        review: '',\n    };\n\n    const [values, setValues] = useState(initialFormValues);\n\n    // handle change function\n    const _handleChange = (e) => {\n        setValues((prevState) => {\n            return {\n                ...prevState,\n                [e.target.id]: e.target.value,\n            };\n        });\n    };\n\n    // create new wish list item function\n    const _createNewReadBook = async (e) => {\n        e.preventDefault();\n        try {\n            const API_ENDPOINT = 'http://localhost:4000/read-books';\n            const response = await fetch(API_ENDPOINT, {\n                method: 'POST',\n                body: JSON.stringify({\n                    title: values.title,\n                    author: values.author,\n                    review: values.review,\n                    userId: userContext.user._id,\n                }),\n                headers: {\n                    'Content-Type': 'application/json'\n                },\n            });\n            if (response.status === 201)\n                userContext.getUser();\n                setValues(initialFormValues);\n        } catch (err) {\n            console.log(err)\n        }\n    };\n\n    return (\n        <div className='read-list'>\n            <h1 className='heading-list'>My Bookshelf</h1>\n            <p className='heading-p'>Add the books you've already read to your bookshelf</p>\n        <div className='container py-5'>\n            <div className='row'>\n            <div className='listforms col-lg-6 col-xm-12'>\n        <form onSubmit={_createNewReadBook}>\n            \n            <div className='txt_field'>\n                <label className='heading-p' htmlFor='title'>Title</label>\n                    <input\n                        type='text'\n                        id='title'\n                        value={values.title}\n                        onChange={_handleChange}\n                        required\n                    />  \n            </div>\n            <div className='txt_field'>\n                <label className='heading-p' htmlFor='author'>Author</label>\n                    <input\n                        type='text'\n                        id='author'\n                        value={values.author}\n                        onChange={_handleChange}\n                        required\n                    />\n            </div>\n            <div className='txt_field'>\n                <label className='heading-p' htmlFor='review'>Review</label>\n                    <input\n                        type='text'\n                        id='review'\n                        value={values.review}\n                        onChange={_handleChange}\n                    />\n            </div>\n            <input className='btn-read btn btn-danger btn-lg ' type='submit' value='Add Book' />\n        </form>\n        </div>\n        <div className='read-list-data col-lg-6 col-xm-12'>\n            <h3>Title & Author</h3>\n            <p>All the reviews should go here</p>\n        </div>\n        </div>\n        </div>\n        </div>\n    )\n};\n\nexport default CreateReadForm;"]},"metadata":{},"sourceType":"module"}