{"ast":null,"code":"var _jsxFileName = \"/Users/adina.weinberg/Desktop/seir-angelica/projects/project-3/frontend/react-bookstop/src/components/CreateReadForm/index.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CreateReadForm = ({\n  getReadBooksData\n}) => {\n  _s();\n\n  const initialFormValues = {\n    title: '',\n    author: '',\n    review: ''\n  };\n  const [values, setValues] = useState(initialFormValues); // handle change function\n\n  const _handleChange = e => {\n    setValues(prevState => {\n      return { ...prevState,\n        [e.target.id]: e.target.value\n      };\n    });\n  }; // create new wish list item function\n\n\n  const _createNewReadBook = async e => {\n    e.preventDefault();\n\n    try {\n      const API_ENDPOINT = 'http://localhost:4000/read-books';\n      const response = await fetch(API_ENDPOINT, {\n        method: 'POST',\n        body: JSON.stringify(values),\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      if (response.status === 201) getReadBooksData();\n      setValues(initialFormValues);\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: _createNewReadBook,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"title\",\n        children: \"Title\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"title\",\n        value: values.title,\n        onChange: _handleChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"author\",\n        children: \"Author\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"author\",\n        value: values.author,\n        onChange: _handleChange,\n        unique: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"review\",\n        children: \"Review\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"review\",\n        value: values.review,\n        onChange: _handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"submit\",\n      value: \"Add Book to Read List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 9\n  }, this);\n};\n\n_s(CreateReadForm, \"9SzSj5ucRpvZPOyv3DoX1W+aBZY=\");\n\n_c = CreateReadForm;\nexport default CreateReadForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateReadForm\");","map":{"version":3,"sources":["/Users/adina.weinberg/Desktop/seir-angelica/projects/project-3/frontend/react-bookstop/src/components/CreateReadForm/index.js"],"names":["useState","CreateReadForm","getReadBooksData","initialFormValues","title","author","review","values","setValues","_handleChange","e","prevState","target","id","value","_createNewReadBook","preventDefault","API_ENDPOINT","response","fetch","method","body","JSON","stringify","headers","status","err","console","log"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;;;AAEA,MAAMC,cAAc,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAA0B;AAAA;;AAC7C,QAAMC,iBAAiB,GAAG;AACtBC,IAAAA,KAAK,EAAE,EADe;AAEtBC,IAAAA,MAAM,EAAE,EAFc;AAGtBC,IAAAA,MAAM,EAAE;AAHc,GAA1B;AAMA,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBR,QAAQ,CAACG,iBAAD,CAApC,CAP6C,CAS7C;;AACA,QAAMM,aAAa,GAAIC,CAAD,IAAO;AACzBF,IAAAA,SAAS,CAAEG,SAAD,IAAe;AACrB,aAAO,EACH,GAAGA,SADA;AAEH,SAACD,CAAC,CAACE,MAAF,CAASC,EAAV,GAAeH,CAAC,CAACE,MAAF,CAASE;AAFrB,OAAP;AAIH,KALQ,CAAT;AAMH,GAPD,CAV6C,CAmB7C;;;AACA,QAAMC,kBAAkB,GAAG,MAAOL,CAAP,IAAa;AACpCA,IAAAA,CAAC,CAACM,cAAF;;AACA,QAAI;AACA,YAAMC,YAAY,GAAG,kCAArB;AACA,YAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACF,YAAD,EAAe;AACvCG,QAAAA,MAAM,EAAE,MAD+B;AAEvCC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAehB,MAAf,CAFiC;AAGvCiB,QAAAA,OAAO,EAAE;AACL,0BAAgB;AADX;AAH8B,OAAf,CAA5B;AAOA,UAAIN,QAAQ,CAACO,MAAT,KAAoB,GAAxB,EACIvB,gBAAgB;AAChBM,MAAAA,SAAS,CAACL,iBAAD,CAAT;AACP,KAZD,CAYE,OAAOuB,GAAP,EAAY;AACVC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACH;AACJ,GAjBD;;AAmBA,sBACI;AAAM,IAAA,QAAQ,EAAEX,kBAAhB;AAAA,4BACI;AAAA,8BACI;AAAO,QAAA,OAAO,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEQ;AACI,QAAA,IAAI,EAAC,MADT;AAEI,QAAA,EAAE,EAAC,OAFP;AAGI,QAAA,KAAK,EAAER,MAAM,CAACH,KAHlB;AAII,QAAA,QAAQ,EAAEK,aAJd;AAKI,QAAA,QAAQ;AALZ;AAAA;AAAA;AAAA;AAAA,cAFR;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAWI;AAAA,8BACI;AAAO,QAAA,OAAO,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEQ;AACI,QAAA,IAAI,EAAC,MADT;AAEI,QAAA,EAAE,EAAC,QAFP;AAGI,QAAA,KAAK,EAAEF,MAAM,CAACF,MAHlB;AAII,QAAA,QAAQ,EAAEI,aAJd;AAKI,QAAA,MAAM;AALV;AAAA;AAAA;AAAA;AAAA,cAFR;AAAA;AAAA;AAAA;AAAA;AAAA,YAXJ,eAqBI;AAAA,8BACI;AAAO,QAAA,OAAO,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEQ;AACI,QAAA,IAAI,EAAC,MADT;AAEI,QAAA,EAAE,EAAC,QAFP;AAGI,QAAA,KAAK,EAAEF,MAAM,CAACD,MAHlB;AAII,QAAA,QAAQ,EAAEG;AAJd;AAAA;AAAA;AAAA;AAAA,cAFR;AAAA;AAAA;AAAA;AAAA;AAAA,YArBJ,eA8BI;AAAO,MAAA,IAAI,EAAC,QAAZ;AAAqB,MAAA,KAAK,EAAC;AAA3B;AAAA;AAAA;AAAA;AAAA,YA9BJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAkCH,CAzED;;GAAMR,c;;KAAAA,c;AA2EN,eAAeA,cAAf","sourcesContent":["import { useState } from 'react';\n\nconst CreateReadForm = ({ getReadBooksData }) => {\n    const initialFormValues = {\n        title: '',\n        author: '',\n        review: '',\n    };\n\n    const [values, setValues] = useState(initialFormValues);\n\n    // handle change function\n    const _handleChange = (e) => {\n        setValues((prevState) => {\n            return {\n                ...prevState,\n                [e.target.id]: e.target.value,\n            };\n        });\n    };\n\n    // create new wish list item function\n    const _createNewReadBook = async (e) => {\n        e.preventDefault();\n        try {\n            const API_ENDPOINT = 'http://localhost:4000/read-books';\n            const response = await fetch(API_ENDPOINT, {\n                method: 'POST',\n                body: JSON.stringify(values),\n                headers: {\n                    'Content-Type': 'application/json'\n                },\n            });\n            if (response.status === 201)\n                getReadBooksData();\n                setValues(initialFormValues);\n        } catch (err) {\n            console.log(err)\n        }\n    };\n\n    return (\n        <form onSubmit={_createNewReadBook}>\n            <div>\n                <label htmlFor='title'>Title</label>\n                    <input\n                        type='text'\n                        id='title'\n                        value={values.title}\n                        onChange={_handleChange}\n                        required\n                    />  \n            </div>\n            <div>\n                <label htmlFor='author'>Author</label>\n                    <input\n                        type='text'\n                        id='author'\n                        value={values.author}\n                        onChange={_handleChange}\n                        unique\n                    />\n            </div>\n            <div>\n                <label htmlFor='review'>Review</label>\n                    <input\n                        type='text'\n                        id='review'\n                        value={values.review}\n                        onChange={_handleChange}\n                    />\n            </div>\n            <input type='submit' value='Add Book to Read List' />\n        </form>\n    )\n};\n\nexport default CreateReadForm;"]},"metadata":{},"sourceType":"module"}