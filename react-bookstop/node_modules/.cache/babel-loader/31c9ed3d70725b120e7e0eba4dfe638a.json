{"ast":null,"code":"var _jsxFileName = \"/Users/adina.weinberg/Desktop/seir-angelica/projects/project-3/frontend/react-bookstop/src/components/EditForm/index.js\",\n    _s = $RefreshSig$();\n\nimport { useContext, useEffect, useState } from \"react\";\nimport { UserContext } from \"../../App\";\nimport { useHistory } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst EditForm = ({\n  currentBook,\n  match\n}) => {\n  _s();\n\n  const API_ENDPOINT = `http://localhost:4000/read-books/${props.match.params.bookId}`;\n  console.log(currentBook);\n  const [values, setValues] = useState({});\n\n  const getBook = async () => {\n    try {\n      const book = await fetch(API_ENDPOINT);\n      const data = await book.json();\n      setValues({\n        title: data.title,\n        author: data.title,\n        review: data.review,\n        userId: data.userId\n      });\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  useEffect(() => {\n    getBook();\n  }, []);\n  const userContext = useContext(UserContext); // const initialFormValues = {\n  //     title: values.title,\n  //     author: values.author,\n  //     review: values.review,\n  //     userId: values.user._id,\n  // };\n\n  const history = useHistory();\n\n  const _handleChange = e => {\n    setValues(prevState => {\n      return { ...prevState,\n        [e.target.id]: e.target.value\n      };\n    });\n  };\n\n  const _updateBook = async e => {\n    e.preventDefault();\n\n    try {\n      const newValues = {};\n\n      if (values.author !== '') {\n        newValues.author = values.author;\n      }\n\n      ;\n\n      if (values.title !== '') {\n        newValues.title = values.title;\n      }\n\n      ;\n\n      if (values.title === '' && values.title === '') {\n        return;\n      }\n\n      ;\n      const response = await fetch(API_ENDPOINT, {\n        method: 'PUT',\n        body: JSON.stringify(newValues),\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n\n      if (response.status === 201) {\n        userContext.getUser();\n        history.push(`/read-books/${props.match.params.bookId}`);\n        setValues(values);\n        console.log('changing book');\n      } else {\n        alert('Something went wrong. Please try again');\n      }\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: _updateBook,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"title\",\n        children: \"Title\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"title\",\n        value: values.title,\n        onChange: _handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"author\",\n        children: \"Author\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"author\",\n        value: values.author,\n        onChange: _handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        value: \"Update book\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 9\n  }, this);\n};\n\n_s(EditForm, \"2ovXhxvuM9iVtJP2GuMuJG4sM6o=\", false, function () {\n  return [useHistory];\n});\n\n_c = EditForm;\nexport default EditForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditForm\");","map":{"version":3,"sources":["/Users/adina.weinberg/Desktop/seir-angelica/projects/project-3/frontend/react-bookstop/src/components/EditForm/index.js"],"names":["useContext","useEffect","useState","UserContext","useHistory","EditForm","currentBook","match","API_ENDPOINT","props","params","bookId","console","log","values","setValues","getBook","book","fetch","data","json","title","author","review","userId","err","userContext","history","_handleChange","e","prevState","target","id","value","_updateBook","preventDefault","newValues","response","method","body","JSON","stringify","headers","status","getUser","push","alert"],"mappings":"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","sourcesContent":["import { useContext, useEffect, useState } from \"react\";\nimport { UserContext } from \"../../App\";\nimport { useHistory } from \"react-router-dom\";\n\n\nconst EditForm = ({ currentBook, match }) => {\n    const API_ENDPOINT = `http://localhost:4000/read-books/${props.match.params.bookId}`;\n    console.log(currentBook);\n    const [values, setValues] = useState({});\n    \n    const getBook = async () => {\n        try {\n            const book = await fetch(API_ENDPOINT);\n            const data = await book.json();\n            setValues({ title: data.title, author: data.title, review: data.review, userId: data.userId });\n        } catch (err) {\n            console.log(err)\n        }\n    };\n    \n    useEffect(() => {\n        getBook();\n    }, []);\n    \n    const userContext = useContext(UserContext);\n    // const initialFormValues = {\n    //     title: values.title,\n    //     author: values.author,\n    //     review: values.review,\n    //     userId: values.user._id,\n    // };\n    \n\n    const history = useHistory();\n    \n    const _handleChange = (e) => {\n        setValues((prevState) => {\n            return {\n                ...prevState,\n                [e.target.id]: e.target.value,\n            };\n        });\n    };\n\n\n\n    const _updateBook = async (e) => {\n        e.preventDefault();\n        try {\n            const newValues = {};\n            if (values.author !== '') {\n                newValues.author = values.author;\n            };\n            if (values.title !== '') {\n                newValues.title = values.title\n            };\n            if (values.title === '' && values.title === ''){\n                return;\n            };\n            const response = await fetch(API_ENDPOINT, {\n                method: 'PUT',\n                body: JSON.stringify(newValues),\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n            })\n            if (response.status === 201) {\n                userContext.getUser();\n                history.push(`/read-books/${props.match.params.bookId}`);\n                setValues(values);\n                console.log('changing book')\n            } else {\n                alert('Something went wrong. Please try again');\n            }\n        } catch (err) {\n            console.log(err)\n        }\n    };\n\n    return (\n        <div>\n            <form onSubmit={_updateBook}> \n                <label htmlFor='title'>Title</label>\n                <input \n                    type='text'\n                    id='title'\n                    value={values.title}\n                    onChange={_handleChange}\n                />\n                <label htmlFor='author'>Author</label>\n                <input \n                    type='text'\n                    id='author'\n                    value={values.author}\n                    onChange={_handleChange}\n                />\n                <input type='submit' value='Update book' />\n            </form>\n        </div>\n    )\n};\n\nexport default EditForm;"]},"metadata":{},"sourceType":"module"}