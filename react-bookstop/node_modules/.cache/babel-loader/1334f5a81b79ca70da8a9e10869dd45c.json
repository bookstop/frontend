{"ast":null,"code":"var _jsxFileName = \"/Users/adina.weinberg/Desktop/seir-angelica/projects/project-3/frontend/react-bookstop/src/components/LoginForm/index.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect, useContext } from 'react';\nimport { useHistory } from \"react-router-dom\";\nimport { UserAuthStatusContext, UserAuthDispatchContext } from '../../App';\nimport { Spinner } from '../Spinner';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst LoginForm = props => {\n  _s();\n\n  const userAuth = useContext(UserAuthStatusContext);\n  const userDispatch = useContext(UserAuthDispatchContext);\n  let history = useHistory();\n  const initialFormSubmitStatus = {\n    showStatus: false,\n    showSpinner: false,\n    message: \"\"\n  };\n  const [formStatus, setFormStatus] = useState(initialFormSubmitStatus);\n  const [loggedIn, setLoggedIn] = useState(false); // handle user form login request \n\n  const _handleUserLogin = async event => {\n    setFormStatus({\n      showStatus: true,\n      showSpinner: true,\n      message: \"\"\n    });\n    event.preventDefault();\n\n    try {\n      const API_ENDPOINT = 'http://localhost:4000/users/login';\n      const response = await fetch(API_ENDPOINT, {\n        method: 'POST',\n        body: JSON.stringify(values),\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      const data = await response.json();\n\n      if (response.status === 200) {\n        localStorage.setItem('BookStopUser', data._id); // localStorage.removeItem('BookStopUser');\n        // localStorage.getItem('BookStopUser');\n\n        userDispatch({\n          \"type\": \"Login\",\n          \"login\": data\n        });\n        setFormStatus({\n          showStatus: true,\n          showSpinner: false,\n          message: \"You have successfully logged in.\"\n        });\n        setLoggedIn(true);\n      } else {\n        setFormStatus({\n          showStatus: true,\n          showSpinner: false,\n          message: \"Log in failed.  Check your credentials and try again.\"\n        });\n      }\n    } catch (err) {\n      setFormStatus({\n        showStatus: true,\n        showSpinner: false,\n        message: \"The log in system encountered an error.  Please try again.\"\n      });\n      console.log(err);\n    }\n  }; // Upon a successful login, send the user to the /home route after a 2 second delay\n\n\n  useEffect(() => {\n    if (loggedIn === true) {\n      setTimeout(() => {\n        history.push('/home');\n      }, 2000);\n    }\n  }, [loggedIn, history]); // Login form on this component\n\n  const initialFormValues = {\n    username: '',\n    password: ''\n  };\n  const [values, setValues] = useState(initialFormValues); // handle change function\n\n  const _handleChange = e => {\n    setValues(prevState => {\n      return { ...prevState,\n        [e.target.id]: e.target.value\n      };\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: _handleUserLogin,\n    className: \"login-form\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Registered User Log In\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"username\",\n        children: \"Username: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"username\",\n        value: values.username,\n        onChange: _handleChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"password\",\n        children: \"Password: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        id: \"password\",\n        value: values.password,\n        onChange: _handleChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"submit\",\n      value: \"Login to BookStop\",\n      className: \"btn btn-danger\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Spinner, {\n      props: formStatus\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 9\n  }, this);\n};\n\n_s(LoginForm, \"vncd54+76M98UI5J4J4bvbWNYYk=\", false, function () {\n  return [useHistory];\n});\n\n_c = LoginForm;\nexport default LoginForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginForm\");","map":{"version":3,"sources":["/Users/adina.weinberg/Desktop/seir-angelica/projects/project-3/frontend/react-bookstop/src/components/LoginForm/index.js"],"names":["useState","useEffect","useContext","useHistory","UserAuthStatusContext","UserAuthDispatchContext","Spinner","LoginForm","props","userAuth","userDispatch","history","initialFormSubmitStatus","showStatus","showSpinner","message","formStatus","setFormStatus","loggedIn","setLoggedIn","_handleUserLogin","event","preventDefault","API_ENDPOINT","response","fetch","method","body","JSON","stringify","values","headers","data","json","status","localStorage","setItem","_id","err","console","log","setTimeout","push","initialFormValues","username","password","setValues","_handleChange","e","prevState","target","id","value"],"mappings":"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","sourcesContent":["import { useState, useEffect, useContext } from 'react';\nimport { useHistory } from \"react-router-dom\";\nimport { UserAuthStatusContext, UserAuthDispatchContext } from '../../App';\nimport { Spinner } from '../Spinner';\n\nconst LoginForm = (props) => {\n\n    const userAuth = useContext(UserAuthStatusContext);\n    const userDispatch = useContext(UserAuthDispatchContext);\n    let history = useHistory();\n\n    const initialFormSubmitStatus = {\n        showStatus: false,\n        showSpinner: false,\n        message: \"\",\n    };\n\n    const [formStatus, setFormStatus] = useState(initialFormSubmitStatus);\n    const [loggedIn, setLoggedIn] = useState(false);\n\n    // handle user form login request \n    const _handleUserLogin = async (event) => {\n        setFormStatus({showStatus:true, showSpinner:true, message: \"\"});\n        event.preventDefault();\n        try {\n            const API_ENDPOINT = 'http://localhost:4000/users/login';\n            const response = await fetch(API_ENDPOINT, {\n                method: 'POST',\n                body: JSON.stringify(values),\n                headers: {\n                    'Content-Type': 'application/json'\n                },\n            });     \n            const data = await response.json();\n            if (response.status === 200) {\n                localStorage.setItem('BookStopUser', data._id );\n                // localStorage.removeItem('BookStopUser');\n                // localStorage.getItem('BookStopUser');\n                userDispatch({\"type\":\"Login\", \"login\": data} );\n                setFormStatus({showStatus:true, showSpinner:false, message: \"You have successfully logged in.\"});\n                setLoggedIn(true);\n            }\n            else {\n                setFormStatus({showStatus: true, showSpinner:false, message: \"Log in failed.  Check your credentials and try again.\"});\n            }\n        } catch (err) {\n            setFormStatus({showStatus: true, showSpinner:false, message: \"The log in system encountered an error.  Please try again.\"});\n            console.log(err)\n        }\n    };\n\n    // Upon a successful login, send the user to the /home route after a 2 second delay\n    useEffect(() => {\n        if (loggedIn===true) {\n            setTimeout(() => {\n                history.push('/home');\n            }, 2000);\n        }\n      }, [loggedIn, history]);\n\n    // Login form on this component\n    const initialFormValues = {\n        username: '',\n        password: '',\n    };\n\n    const [values, setValues] = useState(initialFormValues);\n\n    // handle change function\n    const _handleChange = (e) => {\n        setValues((prevState) => {\n            return {\n                ...prevState,\n                [e.target.id]: e.target.value,\n            };\n        });\n    };\n\n \n    return (\n\n        <form onSubmit={_handleUserLogin} className=\"login-form\">\n            <h3>Registered User Log In</h3>\n            <fieldset>\n                <label htmlFor='username'>Username: </label>\n                    <input\n                        type='text'\n                        id='username'\n                        value={values.username}\n                        onChange={_handleChange}\n                        required\n                    />  \n            </fieldset>\n            <fieldset>\n                <label htmlFor='password'>Password: </label>\n                    <input\n                        type='password'\n                        id='password'\n                        value={values.password}\n                        onChange={_handleChange}\n                        required\n                    />\n            </fieldset>\n            <input type='submit' value='Login to BookStop' className=\"btn btn-danger\"/>\n            {/* FormStatus Component*/}\n            <Spinner props={formStatus} />            \n        </form>\n\n    )\n};\n\nexport default LoginForm;\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}