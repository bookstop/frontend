{"ast":null,"code":"var _jsxFileName = \"/Users/adina.weinberg/Desktop/seir-angelica/projects/project-3/frontend/react-bookstop/src/components/EditForm/index.js\",\n    _s = $RefreshSig$();\n\nimport { useContext, useEffect, useState } from \"react\";\nimport { UserContext } from \"../../App\";\nimport { useHistory } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst EditForm = ({\n  props\n}) => {\n  _s();\n\n  const userContext = useContext(UserContext);\n  const initialFormValues = {// title: props.title,\n    // author: props.author,\n    // review: props.review,\n    // userId: props.user._id,\n  };\n  const [values, setValues] = useState(initialFormValues);\n  const history = useHistory();\n\n  const _handleChange = e => {\n    setValues(prevState => {\n      return { ...prevState,\n        [e.target.id]: e.target.value\n      };\n    });\n  };\n\n  const API_ENDPOINT = `http://localhost:4000/read-books/${props.match.params.bookId}`;\n  console.log('props:', props);\n\n  const getBook = async () => {\n    try {\n      const book = await fetch(API_ENDPOINT);\n      const data = await book.json();\n      setValues({\n        title: data.title,\n        author: data.title\n      });\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  useEffect(() => {\n    getBook();\n  }, []);\n\n  const _updateBook = async e => {\n    e.preventDefault();\n\n    try {\n      const newValues = {};\n\n      if (values.author !== '') {\n        newValues.author = values.author;\n      }\n\n      ;\n\n      if (values.title !== '') {\n        newValues.title = values.title;\n      }\n\n      ;\n\n      if (values.title === '' && values.title === '') {\n        return;\n      }\n\n      ;\n      const response = await fetch(API_ENDPOINT, {\n        method: 'PUT',\n        body: JSON.stringify(newValues),\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n\n      if (response.status === 201) {\n        userContext.getUser();\n        history.push(`/read-books/${props.match.params.bookId}`);\n        setValues(initialFormValues);\n        console.log('changing book');\n      } else {\n        alert('Something went wrong. Please try again');\n      }\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: _updateBook,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"title\",\n        children: \"Title\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"title\",\n        value: values.title,\n        onChange: _handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"author\",\n        children: \"Author\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"author\",\n        value: values.author,\n        onChange: _handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        value: \"Update book\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 9\n  }, this);\n};\n\n_s(EditForm, \"aNUhn1roPaUcO/TnozDUGplloJQ=\", false, function () {\n  return [useHistory];\n});\n\n_c = EditForm;\nexport default EditForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditForm\");","map":{"version":3,"sources":["/Users/adina.weinberg/Desktop/seir-angelica/projects/project-3/frontend/react-bookstop/src/components/EditForm/index.js"],"names":["useContext","useEffect","useState","UserContext","useHistory","EditForm","props","userContext","initialFormValues","values","setValues","history","_handleChange","e","prevState","target","id","value","API_ENDPOINT","match","params","bookId","console","log","getBook","book","fetch","data","json","title","author","err","_updateBook","preventDefault","newValues","response","method","body","JSON","stringify","headers","status","getUser","push","alert"],"mappings":"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","sourcesContent":["import { useContext, useEffect, useState } from \"react\";\nimport { UserContext } from \"../../App\";\nimport { useHistory } from \"react-router-dom\";\n\n\nconst EditForm = ({ props }) => {\n    const userContext = useContext(UserContext);\n    const initialFormValues = {\n        // title: props.title,\n        // author: props.author,\n        // review: props.review,\n        // userId: props.user._id,\n    };\n\n    const [values, setValues] = useState(initialFormValues);\n    const history = useHistory();\n    \n    const _handleChange = (e) => {\n        setValues((prevState) => {\n            return {\n                ...prevState,\n                [e.target.id]: e.target.value,\n            };\n        });\n    };\n\n    const API_ENDPOINT = `http://localhost:4000/read-books/${props.match.params.bookId}`;\n    console.log('props:', props)\n\n    const getBook = async () => {\n        try {\n            const book = await fetch(API_ENDPOINT);\n            const data = await book.json();\n            setValues({ title: data.title, author: data.title });\n        } catch (err) {\n            console.log(err)\n        }\n    };\n\n    useEffect(() => {\n        getBook();\n    }, []);\n\n    const _updateBook = async (e) => {\n        e.preventDefault();\n        try {\n            const newValues = {};\n            if (values.author !== '') {\n                newValues.author = values.author;\n            };\n            if (values.title !== '') {\n                newValues.title = values.title\n            };\n            if (values.title === '' && values.title === ''){\n                return;\n            };\n            const response = await fetch(API_ENDPOINT, {\n                method: 'PUT',\n                body: JSON.stringify(newValues),\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n            })\n            if (response.status === 201) {\n                userContext.getUser();\n                history.push(`/read-books/${props.match.params.bookId}`);\n                setValues(initialFormValues);\n                console.log('changing book')\n            } else {\n                alert('Something went wrong. Please try again');\n            }\n        } catch (err) {\n            console.log(err)\n        }\n    };\n\n    return (\n        <div>\n            <form onSubmit={_updateBook}> \n                <label htmlFor='title'>Title</label>\n                <input \n                    type='text'\n                    id='title'\n                    value={values.title}\n                    onChange={_handleChange}\n                />\n                <label htmlFor='author'>Author</label>\n                <input \n                    type='text'\n                    id='author'\n                    value={values.author}\n                    onChange={_handleChange}\n                />\n                <input type='submit' value='Update book' />\n            </form>\n        </div>\n    )\n};\n\nexport default EditForm;"]},"metadata":{},"sourceType":"module"}