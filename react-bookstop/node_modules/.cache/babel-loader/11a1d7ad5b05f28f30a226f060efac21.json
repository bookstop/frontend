{"ast":null,"code":"var _jsxFileName = \"/Users/adina.weinberg/Desktop/seir-angelica/projects/project-3/frontend/react-bookstop/src/components/EditForm/index.js\",\n    _s = $RefreshSig$();\n\nimport { useContext, useEffect, useState } from \"react\";\nimport { UserContext } from \"../../App\";\nimport { useHistory } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst EditForm = ({\n  match\n}) => {\n  _s();\n\n  const userContext = useContext(UserContext);\n  const initialFormValues = {\n    title: '',\n    author: ''\n  };\n  const [values, setValues] = useState(initialFormValues);\n  const history = useHistory();\n\n  const _handleChange = e => {\n    setValues(prevState => {\n      return { ...prevState,\n        [e.target.id]: e.target.value\n      };\n    });\n  };\n\n  const API_ENDPOINT = `http://localhost:4000/read-books/:${match.params.bookId}`;\n\n  const getBook = async () => {\n    try {\n      const book = await fetch(API_ENDPOINT);\n      const data = await book.json();\n      setValues({\n        title: data.title,\n        author: author.title\n      });\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  useEffect(() => {\n    getBook();\n  }, []);\n\n  const _updateBook = async e => {\n    e.preventDefault();\n\n    try {\n      const response = await fetch(API_ENDPOINT, {\n        method: 'PUT',\n        body: JSON.stringify(values),\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n\n      if (response.status === 201) {\n        userContext.getUser();\n        setValues(initialFormValues);\n      }\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: _updateBook,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"title\",\n        children: \"Title\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"title\",\n        value: values.title,\n        onChange: _handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"author\",\n        children: \"Author\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"author\",\n        value: values.author,\n        onChange: _handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        value: \"update book\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 9\n  }, this);\n};\n\n_s(EditForm, \"aNUhn1roPaUcO/TnozDUGplloJQ=\", false, function () {\n  return [useHistory];\n});\n\n_c = EditForm;\nexport default EditForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditForm\");","map":{"version":3,"sources":["/Users/adina.weinberg/Desktop/seir-angelica/projects/project-3/frontend/react-bookstop/src/components/EditForm/index.js"],"names":["useContext","useEffect","useState","UserContext","useHistory","EditForm","match","userContext","initialFormValues","title","author","values","setValues","history","_handleChange","e","prevState","target","id","value","API_ENDPOINT","params","bookId","getBook","book","fetch","data","json","err","console","log","_updateBook","preventDefault","response","method","body","JSON","stringify","headers","status","getUser"],"mappings":"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","sourcesContent":["import { useContext, useEffect, useState } from \"react\";\nimport { UserContext } from \"../../App\";\nimport { useHistory } from \"react-router-dom\";\n\n\nconst EditForm = ({ match }) => {\n    const userContext = useContext(UserContext);\n    const initialFormValues = {\n        title: '',\n        author: '',\n    };\n\n    const [values, setValues] = useState(initialFormValues);\n    const history = useHistory();\n    \n    const _handleChange = (e) => {\n        setValues((prevState) => {\n            return {\n                ...prevState,\n                [e.target.id]: e.target.value,\n            };\n        });\n    };\n\n    const API_ENDPOINT = `http://localhost:4000/read-books/:${match.params.bookId}`\n\n    const getBook = async () => {\n        try {\n            const book = await fetch(API_ENDPOINT);\n            const data = await book.json();\n            setValues({ title: data.title, author: author.title });\n        } catch (err) {\n            console.log(err)\n        }\n    };\n\n    useEffect(() => {\n        getBook();\n    }, []);\n\n    const _updateBook = async (e) => {\n        e.preventDefault();\n        try {\n            const response = await fetch(API_ENDPOINT, {\n                method: 'PUT',\n                body: JSON.stringify(values),\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n            })\n            if (response.status === 201) {\n                userContext.getUser();\n                setValues(initialFormValues);\n            }\n        } catch (err) {\n            console.log(err)\n        }\n    }\n\n    return (\n        <div>\n            <form onSubmit={_updateBook}>\n                <label htmlFor='title'>Title</label>\n                <input \n                    type='text'\n                    id='title'\n                    value={values.title}\n                    onChange={_handleChange}\n                />\n                <label htmlFor='author'>Author</label>\n                <input \n                    type='text'\n                    id='author'\n                    value={values.author}\n                    onChange={_handleChange}\n                />\n                <input type='submit' value='update book' />\n            </form>\n        </div>\n    )\n};\n\nexport default EditForm;"]},"metadata":{},"sourceType":"module"}